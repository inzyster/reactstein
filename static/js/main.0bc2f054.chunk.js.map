{"version":3,"sources":["Column.tsx","Renderer.tsx","Map.ts","Loader.tsx","App.tsx","Utils.ts","serviceWorker.ts","index.tsx"],"names":["Column","props","className","style","flexBasis","widthFrac","height","backgroundColor","color","Renderer","useState","Array","cols","fill","map","_","idx","columns","c","Convert","json","val","JSON","parse","typ","r","transform","jsonToJSProps","value","stringify","jsToJSONProps","invalidValue","Error","undefined","jsonToJS","forEach","p","key","js","jsToJSON","getProps","ref","typeMap","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","isNaN","valueOf","transformDate","transformPrimitive","a","u","o","name","Map","Layer","Property","Tileset","Loader","textAlign","width","display","version","id","x","y","viewBox","enableBackground","stroke","cx","cy","attributeName","dur","values","repeatCount","begin","App","isLoaded","setIsLoaded","setMap","useEffect","fetch","url","then","response","text","data","MapConverter","toMap","loadMap","rows","level","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wOAuBeA,G,MAfwB,SAAAC,GACrC,OACE,yBACEC,UAAU,SACVC,MAAO,CACLC,UAAU,QAAD,OAAUH,EAAMI,UAAhB,YACTC,OAAQL,EAAMK,OACdC,gBAAiBN,EAAMO,QAL3B,UC2BWC,EAtB4B,SAAAR,GAAU,IAAD,EACpBS,mBAC5BC,MAAMV,EAAMW,MACTC,KAAK,MACLC,IAAI,SAACC,EAAGC,GACP,MAAO,CAAEV,OAAQ,EAAGE,MAAO,kBALiB,mBAC3CS,EAD2C,UASlD,OACE,yBAAKf,UAAU,YACb,yBAAKA,UAAU,YACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACZe,EAAQH,IAAI,SAAAI,GACX,OAAO,kBAAC,EAAD,CAAQb,UAAW,EAAIJ,EAAMW,KAAMN,OAAQY,EAAEZ,OAAQE,MAAOU,EAAEV,a,cCiDlEW,EAAb,mGACsBC,GAClB,OAgHaC,EAhHDC,KAAKC,MAAMH,GAgHAI,EAhHOC,EAAE,OAiH3BC,EAAUL,EAAKG,EAAKG,GAD7B,IAAiBN,EAAUG,IAlH3B,gCAK0BI,GACtB,OAAON,KAAKO,WAgHGR,EAhHcO,EAgHNJ,EAhHaC,EAAE,OAiHjCC,EAAUL,EAAKG,EAAKM,IAjHsB,KAAM,GAgHzD,IAAmBT,EAAQG,MAtH3B,KAUA,SAASO,EAAaP,EAAUH,GAC9B,MAAMW,MAAM,iBAAD,OAAkBV,KAAKO,UAAUR,GAAjC,qBAAkDC,KAAKO,UAAUL,KAG9E,SAASG,EAAcH,GACrB,QAAqBS,IAAjBT,EAAIU,SAAwB,CAC9B,IAAIpB,EAAW,GACfU,EAAIvB,MAAMkC,QAAQ,SAACC,GAAD,OAAatB,EAAIsB,EAAEhB,MAAQ,CAAEiB,IAAKD,EAAEE,GAAId,IAAKY,EAAEZ,OACjEA,EAAIU,SAAWpB,EAEjB,OAAOU,EAAIU,SAGb,SAASJ,EAAcN,GACrB,QAAqBS,IAAjBT,EAAIe,SAAwB,CAC9B,IAAIzB,EAAW,GACfU,EAAIvB,MAAMkC,QAAQ,SAACC,GAAD,OAAatB,EAAIsB,EAAEE,IAAM,CAAED,IAAKD,EAAEhB,KAAMI,IAAKY,EAAEZ,OACjEA,EAAIe,SAAWzB,EAEjB,OAAOU,EAAIe,SAGb,SAASb,EAAUL,EAAUG,EAAUgB,GA0DrC,GAAY,QAARhB,EAAe,OAAOH,EAC1B,GAAY,OAARG,EACF,OAAY,OAARH,EAAqBA,EAClBU,EAAaP,EAAKH,GAE3B,IAAY,IAARG,EAAe,OAAOO,EAAaP,EAAKH,GAC5C,KAAsB,kBAARG,QAAgCS,IAAZT,EAAIiB,KACpCjB,EAAMkB,EAAQlB,EAAIiB,KAEpB,OAAI9B,MAAMgC,QAAQnB,GAjDlB,SAAuBoB,EAAiBvB,GACtC,OAA4B,IAAxBuB,EAAMC,QAAQxB,GAAoBA,EAC/BU,EAAaa,EAAOvB,GA+CEyB,CAActB,EAAKH,GAC/B,kBAARG,EACFA,EAAIuB,eAAe,gBA/D5B,SAAwBC,EAAa3B,GAGnC,IADA,IAAI4B,EAAID,EAAKE,OACJC,EAAI,EAAGA,EAAIF,EAAGE,IAAK,CAC1B,IAAI3B,EAAMwB,EAAKG,GACf,IACE,OAAOzB,EAAUL,EAAKG,EAAKgB,GAC3B,MAAOzB,KAEX,OAAOgB,EAAaiB,EAAM3B,GAuDtB+B,CAAe5B,EAAI6B,aAAchC,GACjCG,EAAIuB,eAAe,cAhDzB,SAAwBvB,EAAUH,GAEhC,OAAKV,MAAMgC,QAAQtB,GACZA,EAAIP,IAAI,SAAAwC,GAAE,OAAI5B,EAAU4B,EAAI9B,EAAKgB,KADRT,EAAa,QAASV,GA+ClDkC,CAAe/B,EAAIgC,WAAYnC,GAC/BG,EAAIuB,eAAe,SAjCzB,SAAyB9C,EAA6BwD,EAAiBpC,GACrE,GAAY,OAARA,GAA+B,kBAARA,GAAoBV,MAAMgC,QAAQtB,GAC3D,OAAOU,EAAa,SAAUV,GAEhC,IAAIqC,EAAc,GAWlB,OAVAC,OAAOC,oBAAoB3D,GAAOkC,QAAQ,SAAAE,GACxC,IAAMwB,EAAO5D,EAAMoC,GACbyB,EAAIH,OAAOI,UAAUhB,eAAeiB,KAAK3C,EAAKgB,GAAOhB,EAAIgB,QAAOJ,EACtEyB,EAAOG,EAAKxB,KAAOX,EAAUoC,EAAGD,EAAKrC,IAAKgB,KAE5CmB,OAAOC,oBAAoBvC,GAAKc,QAAQ,SAAAE,GACjCsB,OAAOI,UAAUhB,eAAeiB,KAAK/D,EAAOoC,KAC/CqB,EAAOrB,GAAOX,EAAUL,EAAIgB,GAAMoB,EAAYjB,MAG3CkB,EAmBHO,CAAgBzB,EAAShB,GAAMA,EAAIiC,WAAYpC,GAC/CU,EAAaP,EAAKH,GAGpBG,IAAQ0C,MAAuB,kBAAR7C,EAjD3B,SAAuBG,EAAUH,GAC/B,GAAY,OAARA,EACF,OAAO,KAET,IAAM8C,EAAI,IAAID,KAAK7C,GACnB,OAAI+C,MAAMD,EAAEE,WACHtC,EAAa,OAAQV,GAEvB8C,EAyC2CG,CAAc9C,EAAKH,GA7EvE,SAA4BG,EAAaH,GACvC,cAAWG,WAAeH,EAAYA,EAC/BU,EAAaP,EAAKH,GA4EpBkD,CAAmB/C,EAAKH,GAWjC,SAASmD,EAAEhD,GACT,MAAO,CAAEgC,WAAYhC,GAGvB,SAASiD,IAAmB,IAAD,uBAAbzB,EAAa,yBAAbA,EAAa,gBACzB,MAAO,CAAEK,aAAcL,GAGzB,SAAS0B,EAAEzE,EAAcwD,GACvB,MAAO,CAAExD,QAAOwD,cAOlB,SAAShC,EAAEkD,GACT,MAAO,CAAElC,IAAKkC,GAGhB,IAAMjC,EAAe,CACnBkC,IAAKF,EACH,CACE,CAAEtD,KAAM,SAAUkB,GAAI,SAAUd,IAAK,GACrC,CAAEJ,KAAM,WAAYkB,GAAI,WAAYd,KAAK,GACzC,CAAEJ,KAAM,SAAUkB,GAAI,SAAUd,IAAKgD,EAAE/C,EAAE,WACzC,CAAEL,KAAM,cAAekB,GAAI,cAAed,IAAK,GAC/C,CAAEJ,KAAM,eAAgBkB,GAAI,eAAgBd,IAAK,GACjD,CAAEJ,KAAM,cAAekB,GAAI,cAAed,IAAK,IAC/C,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAKgD,EAAE/C,EAAE,cACjD,CAAEL,KAAM,cAAekB,GAAI,cAAed,IAAK,IAC/C,CAAEJ,KAAM,eAAgBkB,GAAI,eAAgBd,IAAK,IACjD,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAK,GAC7C,CAAEJ,KAAM,WAAYkB,GAAI,WAAYd,IAAKgD,EAAE/C,EAAE,aAC7C,CAAEL,KAAM,YAAakB,GAAI,YAAad,IAAK,GAC3C,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,UAAWkB,GAAI,UAAWd,IAAK,MACvC,CAAEJ,KAAM,QAASkB,GAAI,QAASd,IAAK,KAErC,GAEFqD,MAAOH,EACL,CACE,CAAEtD,KAAM,OAAQkB,GAAI,OAAQd,IAAKiD,OAAExC,EAAWuC,EAAE,KAChD,CAAEpD,KAAM,SAAUkB,GAAI,SAAUd,IAAKiD,OAAExC,EAAW,IAClD,CAAEb,KAAM,KAAMkB,GAAI,KAAMd,IAAK,GAC7B,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,UAAWkB,GAAI,UAAWd,IAAK,GACvC,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,UAAWkB,GAAI,UAAWd,KAAK,GACvC,CAAEJ,KAAM,QAASkB,GAAI,QAASd,IAAKiD,OAAExC,EAAW,IAChD,CAAEb,KAAM,IAAKkB,GAAI,IAAKd,IAAK,GAC3B,CAAEJ,KAAM,IAAKkB,GAAI,IAAKd,IAAK,GAC3B,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAKiD,OAAExC,EAAWuC,EAAE/C,EAAE,eAC9D,CAAEL,KAAM,YAAakB,GAAI,YAAad,IAAKiD,OAAExC,EAAW,KACxD,CAAEb,KAAM,UAAWkB,GAAI,UAAWd,IAAKiD,OAAExC,EAAWuC,EAAE/C,EAAE,eAE1D,GAEFkC,OAAQe,EACN,CACE,CAAEtD,KAAM,SAAUkB,GAAI,SAAUd,IAAK,GACrC,CAAEJ,KAAM,KAAMkB,GAAI,KAAMd,IAAK,GAC7B,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAKgD,EAAE/C,EAAE,cACjD,CAAEL,KAAM,WAAYkB,GAAI,WAAYd,IAAK,GACzC,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,UAAWkB,GAAI,UAAWd,KAAK,GACvC,CAAEJ,KAAM,QAASkB,GAAI,QAASd,IAAK,GACnC,CAAEJ,KAAM,IAAKkB,GAAI,IAAKd,IAAK,GAC3B,CAAEJ,KAAM,IAAKkB,GAAI,IAAKd,IAAK,KAE7B,GAEFsD,SAAUJ,EACR,CACE,CAAEtD,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,QAASkB,GAAI,QAASd,IAAK,MAErC,GAEFuD,QAASL,EACP,CACE,CAAEtD,KAAM,UAAWkB,GAAI,UAAWd,IAAK,GACvC,CAAEJ,KAAM,WAAYkB,GAAI,WAAYd,IAAK,GACzC,CAAEJ,KAAM,QAASkB,GAAI,QAASd,IAAK,IACnC,CAAEJ,KAAM,cAAekB,GAAI,cAAed,IAAK,GAC/C,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAK,GAC7C,CAAEJ,KAAM,SAAUkB,GAAI,SAAUd,IAAK,GACrC,CAAEJ,KAAM,OAAQkB,GAAI,OAAQd,IAAK,IACjC,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAKgD,EAAE/C,EAAE,cACjD,CAAEL,KAAM,UAAWkB,GAAI,UAAWd,IAAK,GACvC,CAAEJ,KAAM,YAAakB,GAAI,YAAad,IAAK,GAC3C,CAAEJ,KAAM,aAAckB,GAAI,aAAcd,IAAK,GAC7C,CAAEJ,KAAM,YAAakB,GAAI,YAAad,IAAK,KAE7C,ICxSSwD,EAAmB,WAC9B,OACE,yBAAK9E,UAAU,SAASC,MAAO,CAAE8E,UAAW,WAC1C,yBACE9E,MAAO,CAAE+E,MAAO,OAAQ5E,OAAQ,OAAQ6E,QAAS,gBACjDC,QAAQ,MACRC,GAAG,KACHC,EAAE,MACFC,EAAE,MACFC,QAAQ,cACRC,iBAAiB,eAEjB,4BAAQ5E,KAAK,OAAO6E,OAAO,OAAOC,GAAG,IAAIC,GAAG,KAAKnE,EAAE,KACjD,6BAASoE,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,SAE1F,4BAAQpF,KAAK,OAAO6E,OAAO,OAAOC,GAAG,KAAKC,GAAG,KAAKnE,EAAE,KAClD,6BAASoE,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,SAE1F,4BAAQpF,KAAK,OAAO6E,OAAO,OAAOC,GAAG,KAAKC,GAAG,KAAKnE,EAAE,KAClD,6BAASoE,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,YCMnFC,EApBO,WAAO,IAAD,EACMxF,oBAAS,GADf,mBACnByF,EADmB,KACTC,EADS,OAEJ1F,mBAAqB,MAFjB,mBAEnBI,EAFmB,KAEduF,EAFc,KAe1B,OAXAC,oBAAU,YACS,IAAbH,GACW,sCAAG,4BAAA3B,EAAA,qEACK+B,OCdJC,EDciB,oBCdA,qBAA6DA,KDcvCC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SADlE,OACRC,EADQ,OAEdP,EAAOQ,EAAaC,MAAMF,IAC1BR,GAAY,GAHE,iCCbA,IAACI,GDaD,MAAH,oDAKbO,KAKF,yBAAK7G,UAAU,OAAOiG,GAAYrF,EAAM,kBAAC,EAAD,CAAUF,KAAM,GAAIoG,KAAM,GAAIC,MAAOnG,IAAU,kBAAC,EAAD,QEXvEoG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpB,KAAK,SAAAqB,GACjCA,EAAaC,gB","file":"static/js/main.0bc2f054.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport interface IColumnProps {\r\n  widthFrac: number;\r\n  height: number;\r\n  color: string;\r\n}\r\n\r\nconst Column: React.FC<IColumnProps> = props => {\r\n  return (\r\n    <div\r\n      className=\"column\"\r\n      style={{\r\n        flexBasis: `calc(${props.widthFrac} * 100%)`,\r\n        height: props.height,\r\n        backgroundColor: props.color\r\n      }}\r\n    >\r\n      &nbsp;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Column;\r\n","import React, { useState } from 'react';\r\nimport { Map } from './Map';\r\nimport Column from './Column';\r\n\r\nexport interface IRendererProps {\r\n  cols: number;\r\n  rows: number;\r\n  level: Map;\r\n}\r\n\r\ninterface IColumnData {\r\n  height: number;\r\n  color: string;\r\n}\r\n\r\nconst Renderer: React.FC<IRendererProps> = props => {\r\n  const [columns, setColumns] = useState(\r\n    Array(props.cols)\r\n      .fill(null)\r\n      .map((_, idx) => {\r\n        return { height: 0, color: 'transparent' } as IColumnData;\r\n      })\r\n  );\r\n\r\n  return (\r\n    <div className=\"renderer\">\r\n      <div className=\"ceiling\"></div>\r\n      <div className=\"floor\"></div>\r\n      <div className=\"walls\">\r\n        {columns.map(c => {\r\n          return <Column widthFrac={1 / props.cols} height={c.height} color={c.color} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Renderer;\r\n","// To parse this data:\r\n//\r\n//   import { Convert, Map } from \"./file\";\r\n//\r\n//   const map = Convert.toMap(json);\r\n//\r\n// These functions will throw an error if the JSON doesn't\r\n// match the expected interface, even if the JSON is valid.\r\n\r\nexport interface Map {\r\n  height: number;\r\n  infinite: boolean;\r\n  layers: Layer[];\r\n  nextlayerid: number;\r\n  nextobjectid: number;\r\n  orientation: string;\r\n  properties: Property[];\r\n  renderorder: string;\r\n  tiledversion: string;\r\n  tileheight: number;\r\n  tilesets: Tileset[];\r\n  tilewidth: number;\r\n  type: string;\r\n  version: number;\r\n  width: number;\r\n}\r\n\r\nexport interface Layer {\r\n  data?: number[];\r\n  height?: number;\r\n  id: number;\r\n  name: string;\r\n  opacity: number;\r\n  type: string;\r\n  visible: boolean;\r\n  width?: number;\r\n  x: number;\r\n  y: number;\r\n  properties?: Property[];\r\n  draworder?: string;\r\n  objects?: Object[];\r\n}\r\n\r\nexport interface Object {\r\n  height: number;\r\n  id: number;\r\n  name: string;\r\n  properties: Property[];\r\n  rotation: number;\r\n  type: string;\r\n  visible: boolean;\r\n  width: number;\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface Property {\r\n  name: string;\r\n  type: string;\r\n  value: string;\r\n}\r\n\r\nexport interface Tileset {\r\n  columns: number;\r\n  firstgid: number;\r\n  image: string;\r\n  imageheight: number;\r\n  imagewidth: number;\r\n  margin: number;\r\n  name: string;\r\n  properties: Property[];\r\n  spacing: number;\r\n  tilecount: number;\r\n  tileheight: number;\r\n  tilewidth: number;\r\n}\r\n\r\n// Converts JSON strings to/from your types\r\n// and asserts the results of JSON.parse at runtime\r\nexport class Convert {\r\n  public static toMap(json: string): Map {\r\n    return cast(JSON.parse(json), r('Map'));\r\n  }\r\n\r\n  public static mapToJson(value: Map): string {\r\n    return JSON.stringify(uncast(value, r('Map')), null, 2);\r\n  }\r\n}\r\n\r\nfunction invalidValue(typ: any, val: any): never {\r\n  throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`);\r\n}\r\n\r\nfunction jsonToJSProps(typ: any): any {\r\n  if (typ.jsonToJS === undefined) {\r\n    var map: any = {};\r\n    typ.props.forEach((p: any) => (map[p.json] = { key: p.js, typ: p.typ }));\r\n    typ.jsonToJS = map;\r\n  }\r\n  return typ.jsonToJS;\r\n}\r\n\r\nfunction jsToJSONProps(typ: any): any {\r\n  if (typ.jsToJSON === undefined) {\r\n    var map: any = {};\r\n    typ.props.forEach((p: any) => (map[p.js] = { key: p.json, typ: p.typ }));\r\n    typ.jsToJSON = map;\r\n  }\r\n  return typ.jsToJSON;\r\n}\r\n\r\nfunction transform(val: any, typ: any, getProps: any): any {\r\n  function transformPrimitive(typ: string, val: any): any {\r\n    if (typeof typ === typeof val) return val;\r\n    return invalidValue(typ, val);\r\n  }\r\n\r\n  function transformUnion(typs: any[], val: any): any {\r\n    // val must validate against one typ in typs\r\n    var l = typs.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var typ = typs[i];\r\n      try {\r\n        return transform(val, typ, getProps);\r\n      } catch (_) {}\r\n    }\r\n    return invalidValue(typs, val);\r\n  }\r\n\r\n  function transformEnum(cases: string[], val: any): any {\r\n    if (cases.indexOf(val) !== -1) return val;\r\n    return invalidValue(cases, val);\r\n  }\r\n\r\n  function transformArray(typ: any, val: any): any {\r\n    // val must be an array with no invalid elements\r\n    if (!Array.isArray(val)) return invalidValue('array', val);\r\n    return val.map(el => transform(el, typ, getProps));\r\n  }\r\n\r\n  function transformDate(typ: any, val: any): any {\r\n    if (val === null) {\r\n      return null;\r\n    }\r\n    const d = new Date(val);\r\n    if (isNaN(d.valueOf())) {\r\n      return invalidValue('Date', val);\r\n    }\r\n    return d;\r\n  }\r\n\r\n  function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\r\n    if (val === null || typeof val !== 'object' || Array.isArray(val)) {\r\n      return invalidValue('object', val);\r\n    }\r\n    var result: any = {};\r\n    Object.getOwnPropertyNames(props).forEach(key => {\r\n      const prop = props[key];\r\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\r\n      result[prop.key] = transform(v, prop.typ, getProps);\r\n    });\r\n    Object.getOwnPropertyNames(val).forEach(key => {\r\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\r\n        result[key] = transform(val[key], additional, getProps);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n\r\n  if (typ === 'any') return val;\r\n  if (typ === null) {\r\n    if (val === null) return val;\r\n    return invalidValue(typ, val);\r\n  }\r\n  if (typ === false) return invalidValue(typ, val);\r\n  while (typeof typ === 'object' && typ.ref !== undefined) {\r\n    typ = typeMap[typ.ref];\r\n  }\r\n  if (Array.isArray(typ)) return transformEnum(typ, val);\r\n  if (typeof typ === 'object') {\r\n    return typ.hasOwnProperty('unionMembers')\r\n      ? transformUnion(typ.unionMembers, val)\r\n      : typ.hasOwnProperty('arrayItems')\r\n      ? transformArray(typ.arrayItems, val)\r\n      : typ.hasOwnProperty('props')\r\n      ? transformObject(getProps(typ), typ.additional, val)\r\n      : invalidValue(typ, val);\r\n  }\r\n  // Numbers can be parsed by Date but shouldn't be.\r\n  if (typ === Date && typeof val !== 'number') return transformDate(typ, val);\r\n  return transformPrimitive(typ, val);\r\n}\r\n\r\nfunction cast<T>(val: any, typ: any): T {\r\n  return transform(val, typ, jsonToJSProps);\r\n}\r\n\r\nfunction uncast<T>(val: T, typ: any): any {\r\n  return transform(val, typ, jsToJSONProps);\r\n}\r\n\r\nfunction a(typ: any) {\r\n  return { arrayItems: typ };\r\n}\r\n\r\nfunction u(...typs: any[]) {\r\n  return { unionMembers: typs };\r\n}\r\n\r\nfunction o(props: any[], additional: any) {\r\n  return { props, additional };\r\n}\r\n\r\nfunction m(additional: any) {\r\n  return { props: [], additional };\r\n}\r\n\r\nfunction r(name: string) {\r\n  return { ref: name };\r\n}\r\n\r\nconst typeMap: any = {\r\n  Map: o(\r\n    [\r\n      { json: 'height', js: 'height', typ: 0 },\r\n      { json: 'infinite', js: 'infinite', typ: true },\r\n      { json: 'layers', js: 'layers', typ: a(r('Layer')) },\r\n      { json: 'nextlayerid', js: 'nextlayerid', typ: 0 },\r\n      { json: 'nextobjectid', js: 'nextobjectid', typ: 0 },\r\n      { json: 'orientation', js: 'orientation', typ: '' },\r\n      { json: 'properties', js: 'properties', typ: a(r('Property')) },\r\n      { json: 'renderorder', js: 'renderorder', typ: '' },\r\n      { json: 'tiledversion', js: 'tiledversion', typ: '' },\r\n      { json: 'tileheight', js: 'tileheight', typ: 0 },\r\n      { json: 'tilesets', js: 'tilesets', typ: a(r('Tileset')) },\r\n      { json: 'tilewidth', js: 'tilewidth', typ: 0 },\r\n      { json: 'type', js: 'type', typ: '' },\r\n      { json: 'version', js: 'version', typ: 3.14 },\r\n      { json: 'width', js: 'width', typ: 0 }\r\n    ],\r\n    false\r\n  ),\r\n  Layer: o(\r\n    [\r\n      { json: 'data', js: 'data', typ: u(undefined, a(0)) },\r\n      { json: 'height', js: 'height', typ: u(undefined, 0) },\r\n      { json: 'id', js: 'id', typ: 0 },\r\n      { json: 'name', js: 'name', typ: '' },\r\n      { json: 'opacity', js: 'opacity', typ: 0 },\r\n      { json: 'type', js: 'type', typ: '' },\r\n      { json: 'visible', js: 'visible', typ: true },\r\n      { json: 'width', js: 'width', typ: u(undefined, 0) },\r\n      { json: 'x', js: 'x', typ: 0 },\r\n      { json: 'y', js: 'y', typ: 0 },\r\n      { json: 'properties', js: 'properties', typ: u(undefined, a(r('Property'))) },\r\n      { json: 'draworder', js: 'draworder', typ: u(undefined, '') },\r\n      { json: 'objects', js: 'objects', typ: u(undefined, a(r('Object'))) }\r\n    ],\r\n    false\r\n  ),\r\n  Object: o(\r\n    [\r\n      { json: 'height', js: 'height', typ: 0 },\r\n      { json: 'id', js: 'id', typ: 0 },\r\n      { json: 'name', js: 'name', typ: '' },\r\n      { json: 'properties', js: 'properties', typ: a(r('Property')) },\r\n      { json: 'rotation', js: 'rotation', typ: 0 },\r\n      { json: 'type', js: 'type', typ: '' },\r\n      { json: 'visible', js: 'visible', typ: true },\r\n      { json: 'width', js: 'width', typ: 0 },\r\n      { json: 'x', js: 'x', typ: 0 },\r\n      { json: 'y', js: 'y', typ: 0 }\r\n    ],\r\n    false\r\n  ),\r\n  Property: o(\r\n    [\r\n      { json: 'name', js: 'name', typ: '' },\r\n      { json: 'type', js: 'type', typ: '' },\r\n      { json: 'value', js: 'value', typ: '' }\r\n    ],\r\n    false\r\n  ),\r\n  Tileset: o(\r\n    [\r\n      { json: 'columns', js: 'columns', typ: 0 },\r\n      { json: 'firstgid', js: 'firstgid', typ: 0 },\r\n      { json: 'image', js: 'image', typ: '' },\r\n      { json: 'imageheight', js: 'imageheight', typ: 0 },\r\n      { json: 'imagewidth', js: 'imagewidth', typ: 0 },\r\n      { json: 'margin', js: 'margin', typ: 0 },\r\n      { json: 'name', js: 'name', typ: '' },\r\n      { json: 'properties', js: 'properties', typ: a(r('Property')) },\r\n      { json: 'spacing', js: 'spacing', typ: 0 },\r\n      { json: 'tilecount', js: 'tilecount', typ: 0 },\r\n      { json: 'tileheight', js: 'tileheight', typ: 0 },\r\n      { json: 'tilewidth', js: 'tilewidth', typ: 0 }\r\n    ],\r\n    false\r\n  )\r\n};\r\n","import React from 'react';\r\n\r\nexport const Loader: React.FC = () => {\r\n  return (\r\n    <div className=\"loader\" style={{ textAlign: 'center' }}>\r\n      <svg\r\n        style={{ width: '50px', height: '50px', display: 'inline-block' }}\r\n        version=\"1.1\"\r\n        id=\"L4\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 100 100\"\r\n        enableBackground=\"new 0 0 0 0\"\r\n      >\r\n        <circle fill=\"#fff\" stroke=\"none\" cx=\"6\" cy=\"50\" r=\"6\">\r\n          <animate attributeName=\"opacity\" dur=\"1s\" values=\"0;1;0\" repeatCount=\"indefinite\" begin=\"0.1\" />\r\n        </circle>\r\n        <circle fill=\"#fff\" stroke=\"none\" cx=\"26\" cy=\"50\" r=\"6\">\r\n          <animate attributeName=\"opacity\" dur=\"1s\" values=\"0;1;0\" repeatCount=\"indefinite\" begin=\"0.2\" />\r\n        </circle>\r\n        <circle fill=\"#fff\" stroke=\"none\" cx=\"46\" cy=\"50\" r=\"6\">\r\n          <animate attributeName=\"opacity\" dur=\"1s\" values=\"0;1;0\" repeatCount=\"indefinite\" begin=\"0.3\" />\r\n        </circle>\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.scss';\r\nimport Renderer from './Renderer';\r\nimport { Map, Convert as MapConverter } from './Map';\r\nimport { Loader } from './Loader';\r\nimport { getUrl } from './Utils';\r\n\r\nconst App: React.FC = () => {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [map, setMap] = useState<Map | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (isLoaded === false) {\r\n      const loadMap = async () => {\r\n        const data = await fetch(getUrl('/assets/E1M2.json')).then(response => response.text());\r\n        setMap(MapConverter.toMap(data));\r\n        setIsLoaded(true);\r\n      };\r\n      loadMap();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"App\">{isLoaded && map ? <Renderer cols={80} rows={43} level={map} /> : <Loader />}</div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const getUrl = (url: string) => (process.env.NODE_ENV === 'development' ? url : `/reactstein${url}`);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}